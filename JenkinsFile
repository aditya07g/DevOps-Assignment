pipeline {
    agent  {
        docker {
            image 'go:latest'
            args '-v /var/run/docker.sock:/var/run/docker.sock'
        }
    }
    stages {
        stage('Checkout') {
            steps {
                git 'https://github.com/your/repository.git'
            }
        }

        stage('Build') {
            steps {
                sh 'go build -o app .'
            }
        }

        stage('Linting') {
            steps {
                script {
                    def lintResult = sh(script: 'golangci-lint run', returnStatus: true)
                    if (lintResult != 0) {
                        error 'Linting failed! Please fix linting errors before proceeding.'
                    }
                }
            }
        }

        stage('Testing') {
            steps {
                sh 'go test ./...'
            }
        }

        stage('Deployment') {
            steps {
                sh 'kubectl apply -f deployment.yaml'
            }
        }
    }

    post {
        always {
            echo 'Performing cleanup...'
            sh 'docker system prune -af'
        }
    }
}
